Zsyntetyzowana sieć jest częścią projektu. Potrzebne również dostarczenie
danych do sieci oraz przedstawienie wyniku.
Do tego celu skorzystano z biblioteki GStreamer, dzięki której można
\todo{Graf - schemat nr 2}
tworzyć grafy z komponentów (pluginów, elementów)
przetwarzających media, zarówno audio jak i video.
Każdy z elementów grafu składa się z co najmniej jednego źródła (source),
lub ujścia (sink), może mieć również wiele wejść i wyjść. W grafie pierwszy
element nie może mieć wejść, natomiast konieczne jest aby posiadał co najmniej
jedno wyjście. Poprawnie przygotowany graf nie powinien mieć komponentów
oferujących źródło, które nie są z niczym połączone.
Pluginy mają ujednolicony interfejs, dzięki czemu można w łatwy sposób
włączyć do grafu własny elemetn. Wtyczki charakteryzują się
pewnymi własnościami, znanymi jako „caps”. Określają one jakie parametry
muszą spełniać media, aby zostały przetworzone przez daną wtyczkę.
Łączone ze sobą elementy dokonują negocjacji
parametrów mediów, takich jak rozdzielczość obrazu, format pikseli,
ilość klatek na sekundę oraz innych.

Wszystkie z elementów użytego grafu opiszę pokrótce:
\subsubsection{xlnxvideosrc i xlnxvideosink}
Są to pluginy dostarczone przez firmę Xilinx wraz z platformą reVISION.
Obydwa korzystają biblioteki Xilinx \lstinline{video_lib}
Pierwszy z nich ułatwia odczytywanie danych ze źródeł, dla których potrzebne
byłyby dodatkowe działania. Są to między innymi kamera USB (użyta w projekcie),
HDMI, MIPI CSI (sprzętowy interfejs do transmisji obrazów i wideo).
\todo{Przypis UG1221, s.32}
Sam element zbudowany jest w oparciu o element v4l2src, dostępny
w standardowej instalacji GStreamera.
Xlnxvideosink również jest oparty o inny element --- kmssink.
Zapewnia odpowiednią konfigurację połączenia z wyświetlaczami
podłączonymi przez HDMI oraz DisplayPort.

\subsubsection{fpsdisplaysink}
Wtyczka typu sink (mająca tylko ujście), która jako parametr
pobiera inną wtyczkę tego typu, np. xlnxvideosink. Jej użycie
pozwala na sprawdzenie liczby klatek na sekundę wyświetlanego
obrazu.

\subsubsection{videoconvert}
Element mający za zadanie dostosować wszystkie parametry obrazu tak,
aby móc połączyć ze sobą dwa niekompatybilne pod względem „caps” elementy.
Ta niekompatybilność może być spowodowana na przykład tym, że dwie
wtyczki potrzebują innego formatu pikseli i jednocześnie nie oferują
możliwości konwersji z jednego formatu na inny.

\subsubsection{videocrop}
Wtyczka służąca do wykadrowania obrazu w zdefiniowanym obszarze.
Wykorzystana została aby otrzymać obraz o tej samej długości
i szerokości wynoszącej 224 (co jest ośmiokrotnością 28, czyli
długością boku obrazów, którymi wytrenowana została sieć) wycięty
ze środka wideo o rozmiarze 1920\(\times \)1080.

\subsubsection{videoscale}
Skaluje obraz do wynegocjowanych pomiędzy sąsiadującymi elementami
parametrów, przy czym pierwsza próba negocjacji to ta sama wielkość
obrazu przy ujściu jak i w źródle, aby skalowanie nie było potrzebne.

\subsubsection{Caps filter}
Element precyzujący parametry obrazu, które wymuszają
dostosowanie się poprzedniego elementu --- na przykład videoscale.

\subsubsection{videobox}
Oprócz możliwości videocrop oferuje także możliwość osadzenia
przychodzącego wideo w tym o większym rozmiarze dodając dookoła ramkę
w wybranym kolorze. Własność autocrop oznacza automatyczne obliczenie
wielkości ramek na podstawie parametrów określonych przez kolejny element tak,
aby obraz przychodzący do videobox był wycentrowany a ramki
były tej samej wielkości.

